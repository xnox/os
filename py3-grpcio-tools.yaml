# Generated from https://pypi.org/project/grpcio-tools/
package:
  name: py3-grpcio-tools
  version: 1.67.0
  epoch: 0
  description: Protobuf code generator for gRPC
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - py3-protobuf
      - py3-grpcio
      - py3-setuptools
      - python3

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - cython
      - git
      - py3-setuptools
      - py3-wheel
      - python3
      - python3-dev
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/grpc/grpc
      tag: v${{package.version}}
      expected-commit: 74f245857247b4b3e28a753d85d06ae2d5a55434

  - runs: |
      git submodule update --init
      cd tools/distrib/python/grpcio_tools
      python ../make_grpcio_tools.py
      export GRPC_PYTHON_BUILD_WITH_CYTHON=1
      python setup.py install --prefix=/usr --root="${{targets.destdir}}"

  - uses: strip

update:
  enabled: true
  github:
    identifier: grpc/grpc
    strip-prefix: v
    use-tag: true

test:
  pipeline:
    - name: Verify Installation
      runs: |
        # Ensure that grpcio-tools is installed
        python3 -c "import grpc_tools.protoc" || exit 1
        echo "grpcio-tools package is installed."
    - name: Test Protobuf Compilation
      runs: |
        # Create a temporary directory for testing
        mkdir -p /home/build/test-grpcio-tools
        cd /home/build/test-grpcio-tools

        # Create a sample .proto file for testing
        echo 'syntax = "proto3"; package test; message TestMessage { string test_field = 1; }' > test.proto

        # Compile the .proto file using grpcio-tools
        python3 -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. test.proto || exit 1
        echo "Protobuf file compiled successfully."

        # Check if Python files were generated
        if [ ! -f test_pb2.py ] || [ ! -f test_pb2_grpc.py ]; then
          echo "Generated Python files not found!"
          exit 1
        fi
        echo "Generated Python files found."
    - name: Clean Up
      runs: |
        # Clean up the test files after the test
        rm -rf /home/build/test-grpcio-tools
